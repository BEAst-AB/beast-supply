<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns="urn:fdc:difi.no:2017:vefa:structure-1"exclude-result-prefixes="xs fo fn xsl">  <xsl:output omit-xml-declaration="no" indent="yes" method="xml"/>  <xsl:template match="/">    <Structure>      <Term>        <xsl:value-of select="/*/processing-instruction('DocumentTerm')"/>      </Term>      <Name>        <xsl:value-of select="/*/processing-instruction('Name')"/>      </Name>      <Namespace>      <xsl:attribute name="prefix">      <xsl:value-of select="fn:prefix-from-QName(fn:QName(fn:namespace-uri(/*/.),fn:name(/*/.)))"/>      </xsl:attribute>        <xsl:value-of select="/*/fn:namespace-uri()"/>      </Namespace>      <Namespace prefix="cac">urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"</Namespace>      <Namespace prefix="cbc">urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2</Namespace>      <xsl:for-each select="/*/processing-instruction('SchematronPath')">        <Rules Type="schematron">          <xsl:value-of select="/*/processing-instruction('SchematronPath')"/>        </Rules>      </xsl:for-each>      <Document>        <xsl:apply-templates mode="root"/>      </Document>    </Structure>  </xsl:template>  <xsl:template match="*" mode="root">    <Term>      <xsl:value-of select="fn:name(.)"/>    </Term>    <xsl:apply-templates mode="therest"/>  </xsl:template>  <xsl:template match="*" mode="therest">    <Element>      <xsl:if test="./processing-instruction('Cardinality')">        <xsl:attribute name="cardinality"><xsl:value-of select="./processing-instruction('Cardinality')"/></xsl:attribute>      </xsl:if>      <Term>        <xsl:value-of select="fn:name(.)"/>      </Term>      <xsl:if test="./processing-instruction('Name')">        <Name>          <xsl:value-of select="./processing-instruction('Name')"/>        </Name>      </xsl:if>      <xsl:if test="./processing-instruction('Description')">        <Description>          <xsl:value-of select="./processing-instruction('Description')"/>        </Description>      </xsl:if>            <xsl:if test="./processing-instruction('DataType')">        <DataType>          <xsl:value-of select="./processing-instruction('DataType')"/>        </DataType>      </xsl:if>      <xsl:for-each select="./processing-instruction('BusinessTerm')">        <Reference type="BUSINESS_TERM">          <xsl:value-of select="."/>        </Reference>      </xsl:for-each>      <xsl:for-each select="./processing-instruction('Rule')">        <Reference type="RULE">          <xsl:value-of select="."/>        </Reference>      </xsl:for-each>      <xsl:for-each select="./processing-instruction('CodeList')">        <Reference type="CODE_LIST">          <xsl:value-of select="."/>        </Reference>      </xsl:for-each>      <Value type="EXAMPLE">        <xsl:value-of select="fn:normalize-space(fn:normalize-space(.))"/>      </Value>      <xsl:apply-templates select="*" mode="therest"/>    </Element>  </xsl:template></xsl:stylesheet>